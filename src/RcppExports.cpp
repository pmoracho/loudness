// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// read
SEXP read(std::string path, bool lines);
RcppExport SEXP _loudness_read(SEXP pathSEXP, SEXP linesSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type path(pathSEXP);
    Rcpp::traits::input_parameter< bool >::type lines(linesSEXP);
    rcpp_result_gen = Rcpp::wrap(read(path, lines));
    return rcpp_result_gen;
END_RCPP
}
// timesTwo
int timesTwo(int x);
RcppExport SEXP _loudness_timesTwo(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(timesTwo(x));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_loudness_read", (DL_FUNC) &_loudness_read, 2},
    {"_loudness_timesTwo", (DL_FUNC) &_loudness_timesTwo, 1},
    {NULL, NULL, 0}
};

RcppExport void R_init_loudness(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
